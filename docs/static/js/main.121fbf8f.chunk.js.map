{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACE,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SApBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCRdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEiCC,UAAUH,GAF3C,+DAGHI,MAAMF,GAHH,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVhB,kBAcfM,GAde,4CAAH,sDCERO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACE,yBAAKc,UAAU,4DACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,KCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WAERxB,EAAUC,GACPwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAGGqB,EDlByBK,CAAa1B,GAAhCa,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,uDAAuDhB,GAEnEoB,GAAW,uBAAGJ,UAAU,oCAAb,gBAEb,yBAAKA,UAAU,aAGXH,EAAOJ,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACLD,UEjBLkB,EAAgB,WAAO,IAAD,EAEG1C,mBAAS,CAAC,cAFb,mBAE1B2C,EAF0B,KAEd5C,EAFc,KAIjC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI4C,EAAWpB,KAAK,SAAAqB,GAAG,OACjB,kBAAC,EAAD,CACEH,IAAKG,EACL9B,SAAU8B,U,MCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.121fbf8f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories( cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  ) \r\n  \r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=DonV0FOraErBdL0623PoLpqb2OjCM1sQ`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n      <img src={ url } alt={ title } />\r\n      <p> { title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n \r\n  const {data: images, loading} = useFetchGifs(category);\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-1s\">{category}</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\"> Loading... </p>}\r\n      \r\n      <div className=\"card-grid\">\r\n\r\n        {\r\n          images.map((img) => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n        \r\n    getGifts( category)\r\n      .then( imgs => {\r\n       \r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });       \r\n\r\n      });\r\n  }, [category]);\r\n\r\n\r\n  return state;\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n  \r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map( cat => (\r\n            <GifGrid\r\n              key={cat}\r\n              category={cat} />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css'\n\nReactDOM.render(  \n  <GiftExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}